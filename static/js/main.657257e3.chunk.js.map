{"version":3,"sources":["functionBased/components/TodoItem.module.css","classBased/logo.svg","classBased/App.js","classBased/reportWebVitals.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/pages/SinglePage.js","functionBased/pages/About.js","functionBased/pages/NotMatch.js","functionBased/components/Navbar.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","fontsize","fontStyle","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","todos","map","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","path","to","activeClassName","NotMatch","Navbar","navbarOpen","setNavbarOpen","width","height","text","link","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.657257e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2O36x\",\"checkbox\":\"TodoItem_checkbox__3ak1I\",\"textInput\":\"TodoItem_textInput__d1E4J\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React , {useState,useEffect} from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\n\r\nconst TodoItem = props => {\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    const handleEditing = () => {\r\n        setEditing(true)\r\n    }\r\n\r\n    //displays keystrokes with keydown\r\n    const handleUpdatedDone = event => {\r\n        if (event.key === \"Enter\"){\r\n            setEditing(false)\r\n        }\r\n    }\r\n\r\n    const completedStyle= {\r\n        fontStyle: \"italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const {completed, id, title} = props.todo\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if(editing){\r\n        viewMode.display = \"none\"\r\n    } else {\r\n        editMode.display = \"none\"\r\n    }\r\n\r\n    //didUnmount equivalent, return function gets called on unmount, only once if no dependency = empty array\r\n    useEffect(() =>{\r\n        return() => {\r\n            console.log(\"cleaning up...\")\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <li className={styles.item}>\r\n            <div onDoubleClick={handleEditing}\r\n                 //for multiple conditions\r\n                 style={(!completed && editing===false) ? viewMode : (completed && editing===false ? editMode : (completed && editing===true ? editMode : viewMode))}>...</div>\r\n            <input type={\"checkbox\"}\r\n                   style={viewMode}\r\n                   className={styles.checkbox}\r\n                   checked={completed}\r\n                   onChange={() => props.handleChangeProps(id)}\r\n            />\r\n            <button onClick={() => props.deleteTodoProps(id)}>\r\n                <FaTrash style={{ color: \"orangered\", fontsize: \"16px\"}}/>\r\n            </button>\r\n            <span style={completed ? completedStyle : null}>{title}</span>\r\n            <input type={\"text\"}\r\n                   style={editMode}\r\n                   className={styles.textInput}\r\n                   value={title}\r\n                   onChange={e => {\r\n                        props.setUpdate(e.target.value, id)\r\n                   }}\r\n                   onKeyDown={handleUpdatedDone}\r\n            />\r\n        </li>\r\n    );\r\n\r\n}\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = props => {\r\n\r\n        return(\r\n            <ul>\r\n                {props.todos.map(todo => (\r\n                    <TodoItem key={todo.id}\r\n                              todo={todo}\r\n                              handleChangeProps={props.handleChangeProps}\r\n                              deleteTodoProps={props.deleteTodoProps}\r\n                              setUpdate={props.setUpdate}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\nfunction Header(){\r\n\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"1.5em\",\r\n    }\r\n\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1 style={{\r\n                fontSize: \"6rem\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"2rem\",\r\n                lineHeight: \"1em\",\r\n                color: \"#ececec\",\r\n                textTransform: \"lowercase\",\r\n                textAlign: \"center\",\r\n            }}>todos\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {useState} from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\nimport { IconContext } from \"react-icons\"\r\n\r\n\r\n\r\n//function type ; react hooks only on top level, not conditionals, loops, functions etc.\r\nconst InputTodo = props => {\r\n    //IMPORTANT: first value is state variable, second is update state function ; JS array destructuring\r\n    //can also use multiple hooks for multiple states/fields\r\n    const [inputText, setInputText] = useState({\r\n        //state is now an object and not only a string\r\n        title:\"\",\r\n    })\r\n\r\n    const onChange = e => {\r\n        setInputText({\r\n            //needed for more than one text field\r\n            ...inputText,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(inputText.title.trim()) {\r\n            props.addTodoProps(inputText.title)\r\n            setInputText({\r\n                title:\"\",\r\n            })\r\n        }else{\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n\r\n    //what gets rendered\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input type=\"text\"\r\n                   className=\"input-text\"\r\n                   placeholder=\"Add Todo...\"\r\n                   value={inputText.title}\r\n                   name=\"title\"\r\n                   onChange={onChange}\r\n            />\r\n            <button className=\"input-submit\">\r\n                <FaPlusCircle\r\n                    style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\r\n                />\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n        /*\r\n        //In case of multiple icons next to each other styling with context\r\n        <IconContext.Provider\r\n      value={{\r\n        color: \"darkcyan\",\r\n        style: { fontSize: \"20px\", color: \"#ff0000\" },\r\n        className: \"submit-iconn\",\r\n      }}\r\n    >\r\n      <button className=\"input-submit\">\r\n        <FaPlusCircle />\r\n        <FaPlusCircle />\r\n        <FaPlusCircle />\r\n      </button>\r\n    </IconContext.Provider>\r\n\r\n         */\r\n}\r\n\r\n\r\n\r\nexport default InputTodo","import React from \"react\";\r\nimport { useParams} from \"react-router-dom\"\r\n\r\nconst SinglePage = () => {\r\n    const aboutData = [\r\n        {\r\n            slug: \"about-app\",\r\n            title: \"About the App\",\r\n            description:\r\n                \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n            slug: \"about-author\",\r\n            title: \"About the Author\",\r\n            description:\r\n                \"This app was developed by me.\",\r\n        },\r\n    ]\r\n\r\n    const {slug} = useParams()\r\n    const aboutContent = aboutData.find(item => item.slug === slug)\r\n    const {title,description} = aboutContent\r\n    return (\r\n        <div className={\"main__content\"}>\r\n            <h1>{title}</h1>\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePage","import React from \"react\"\r\nimport { NavLink, useRouteMatch , Route} from \"react-router-dom\"\r\nimport SinglePage from \"./SinglePage\"\r\n\r\n\r\n\r\nconst About = () => {\r\n    const { url, path } = useRouteMatch()\r\n\r\n    return (\r\n        <div className=\"about__content\">\r\n            <ul className={\"about__list\"}>\r\n                <li>\r\n                    <NavLink to={`${url}/about-app`} activeClassName=\"active-link\">About App</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to={`${url}/about-author`} activeClassName=\"active-link\">About Author</NavLink>\r\n                </li>\r\n            </ul>\r\n            <Route path={`${path}/:slug`}>\r\n                <SinglePage />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from \"react\"\r\n\r\nconst NotMatch = () => {\r\n    return (\r\n        <div>\r\n            <h3>No match for this page</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default NotMatch","import React , {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { MdClose } from \"react-icons/md\"\r\nimport { FiMenu } from \"react-icons/fi\"\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    //can add more links if needed\r\n    const links = [\r\n        {\r\n            id:1,\r\n            path: \"/\",\r\n            text:\"Home\",\r\n        },\r\n        {\r\n            id:2,\r\n            path: \"/about\",\r\n            text:\"About\",\r\n        },\r\n    ]\r\n\r\n    const handleToggle = () => {\r\n        //other method: setNavbarOpen(prev => !prev)\r\n        setNavbarOpen(!navbarOpen)\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n\r\n    const [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n    //looping through links to get individual items\r\n    //dynamically add classname for css\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <button onClick={handleToggle}>{navbarOpen ? (\r\n                <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />\r\n            ) : (\r\n                <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />\r\n            )}</button>\r\n            <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\r\n                {links.map(link => {\r\n                    return(\r\n                      <li key={link.id}>\r\n                          <NavLink to={link.path}\r\n                                   onClick={() => closeMenu()}\r\n                                   activeClassName=\"active-link\"\r\n                                   exact>\r\n                              {link.text}\r\n                          </NavLink>\r\n                      </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React , {useState, useEffect} from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Route, Switch} from \"react-router-dom\"\r\nimport About from \"../pages/About\"\r\nimport NotMatch from \"../pages/NotMatch\"\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst TodoContainer = () => {\r\n\r\n\r\n    const [todos, setTodos] = useState(getInitialTodos())\r\n\r\n\r\n    const handleChange = id => {\r\n        //important to know that prevState can be accessed\r\n        setTodos(prevState =>\r\n            prevState.map(todo => {\r\n                if(todo.id === id){\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n        )\r\n    }\r\n\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id;\r\n            })\r\n        ])\r\n    }\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id:uuidv4(),\r\n            title:title,\r\n            completed:false\r\n        };\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    const setUpdate = (updatedTitle, id) => {\r\n       setTodos(\r\n           todos.map(todo => {\r\n               if (todo.id === id) {\r\n                   todo.title = updatedTitle\r\n               }\r\n               return todo\r\n           })\r\n       )\r\n    }\r\n\r\n    //for lifecycle functions  didMount and didUpdate ; () as argument = function\r\n    //by default on every render, else array dependency needed; empty if no value from render/component needed\r\n    //otherwise everything needed like states, functions, props need to be added\r\n    /*\r\n    useEffect(() => {\r\n        console.log(\"test run\")\r\n\r\n        //getting stored items form local storage\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const loadedTodos = JSON.parse(temp)\r\n\r\n        if(loadedTodos){\r\n            setTodos(loadedTodos)\r\n        }\r\n    }, []);\r\n    */\r\n\r\n    //second method instead of setTodos in Effect (double render):\r\n    function getInitialTodos(){\r\n        //getting stored items\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const savedTodos = JSON.parse(temp)\r\n        return savedTodos || [] // or fallback empty array\r\n    }\r\n\r\n    //only reruns if dependency changes; if empty it only does it on mount; this equals didUpdate\r\n    useEffect(() => {\r\n        //storing todo items\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\",temp)\r\n    },[todos])\r\n\r\n\r\n    //Route path=\"*\" is a fallback and matches everything\r\n    return(\r\n        <>\r\n            <Navbar/>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <div className=\"container\">\r\n                        <div className=\"inner\">\r\n                            <Header />\r\n                            <InputTodo addTodoProps={addTodoItem}/>\r\n                            <TodosList\r\n                                todos={todos}\r\n                                handleChangeProps={handleChange}\r\n                                deleteTodoProps={delTodo}\r\n                                setUpdate={setUpdate}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <NotMatch />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\nexport default TodoContainer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './classBased/App';\r\nimport { BrowserRouter as Router} from \"react-router-dom\"\r\n\r\n//stylesheet\r\nimport \"./functionBased/App.css\"\r\nimport reportWebVitals from './classBased/reportWebVitals';\r\nimport TodoContainer from \"./functionBased/components/TodoContainer\";\r\n\r\nconst element = <h1>Hello from Create React App</h1>\r\n// component file\r\n\r\n//first step for routing: wrap container app\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <TodoContainer/>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}